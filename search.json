[{"path":"https://bayesiandemography.github.io/rvec/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Bayesian Demography Limited Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"sec:aims","dir":"Articles","previous_headings":"","what":"Aims of rvec","title":"Package rvec","text":"Many statistical methods, particularly Bayesian methods, produce random draws distribution. useful feature draws can used make inferences derived quantities. procedure : Step 1. Calculate derived quantity random draws. Step 2. Summaries distribution derived quantities. , instance, randoms draws age-specific mortality rates, want make inferences life expectancy (summary indicator mortality rates), proceed follows: Step 1. Derive life expectancy set age-specific mortality rates. Step 2. Calculate means, medians, statistics life expectancies. theory behind manipulating random draws, argument R needs high-level tools help manipulation, see Kerman Gelman (2007). Package rvec provides tools working random draws. draws held structure called rvec, can, many purposes, treated like ordinary R vector, manipulated using ordinary base R tidyverse code. rvec also contains functions summarizing across random draws.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"toy-example","dir":"Articles","previous_headings":"2 Examples","what":"Toy example","title":"Package rvec","text":"begin toy example, illustrate basic functionality. header <rvec_dbl<3>[1]> describe structure theta: _dbl indicates theta composed doubles <3> indicates theta holds three random draws, [1] indicates draw length 1. can perform standard mathematical operations: theta recycles match length vectors, beta consists three draws: c(4, 2), obtained adding 3 c(1, -1), c(2, 0), obtained adding 1 c(1, -1), c(1, -1), obtained adding 0 c(1, -1). summarize across random draws, use draws_* functions, e.g.","code":"library(rvec) #>  #> Attaching package: 'rvec' #> The following objects are masked from 'package:stats': #>  #>     sd, var #> The following object is masked from 'package:base': #>  #>     rank l <- list(c(3, 1, 0)) theta <- rvec(l) theta #> <rvec_dbl<3>[1]> #> [1] 3,1,0 theta^2 + 1 #> <rvec_dbl<3>[1]> #> [1] 10,2,1 beta <- theta + c(1, -1) beta #> <rvec_dbl<3>[2]> #> [1] 4,2,1  2,0,-1 draws_mean(beta) #> [1] 2.3333333 0.3333333"},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"sec:divorce","dir":"Articles","previous_headings":"2 Examples","what":"Divorce rates","title":"Package rvec","text":"next example involved, includes use standard tidyverse packages. analyse posterior sample Bayesian model divorce rates New Zealand. rates divorces per thousand people per year, disaggregated age sex. rates stored rvec, instead ‘data base’ format, row describes single draw. First convert database format rvec format. number draws large, print method displays <median> (<2.5% quantile>, <97.5% quantile>) distribution, rather individual draws. define ‘total divorce rate’ number divorces person expect experience lifetime prevailing divorce rates. total divorce rate can calculated summarize across draws using draws_ci(), , default, calculates medians 95% credible intervals. Function draws_ci() returns tibble rather vector, , following standard mutate rules, explicitly create new columns. Next calculate ratio female male divorce rates, graph result","code":"library(dplyr, warn.conflicts = FALSE) library(tidyr) library(ggplot2) divorce #> # A tibble: 22,000 × 4 #>    age   sex     draw   rate #>    <fct> <chr>  <int>  <dbl> #>  1 15-19 Female     1 0.0462 #>  2 15-19 Female     2 0.0369 #>  3 15-19 Female     3 0.0448 #>  4 15-19 Female     4 0.0411 #>  5 15-19 Female     5 0.0333 #>  6 15-19 Female     6 0.0511 #>  7 15-19 Female     7 0.0249 #>  8 15-19 Female     8 0.0280 #>  9 15-19 Female     9 0.0339 #> 10 15-19 Female    10 0.0425 #> # ℹ 21,990 more rows divorce_rv <- divorce |>   collapse_to_rvec(value = rate) divorce_rv #> # A tibble: 22 × 3 #>    age   sex                    rate #>    <fct> <chr>          <rdbl<1000>> #>  1 15-19 Female 0.036 (0.019, 0.068) #>  2 20-24 Female    0.67 (0.58, 0.78) #>  3 25-29 Female         3.2 (3, 3.4) #>  4 30-34 Female       5.8 (5.5, 6.1) #>  5 35-39 Female       6.5 (6.2, 6.9) #>  6 40-44 Female       7.1 (6.8, 7.4) #>  7 45-49 Female       7.2 (6.9, 7.6) #>  8 50-54 Female         6 (5.8, 6.3) #>  9 55-59 Female       4.4 (4.2, 4.7) #> 10 60-64 Female         2.7 (2.5, 3) #> # ℹ 12 more rows divorce_rv |>   group_by(sex) |>   summarise(TDR = sum(rate) * 5 / 1000) #> # A tibble: 2 × 2 #>   sex                  TDR #>   <chr>       <rdbl<1000>> #> 1 Female 0.22 (0.22, 0.23) #> 2 Male   0.23 (0.22, 0.23) divorce_rv |>   group_by(sex) |>   summarise(tdr = sum(rate) * 5 / 1000) |>   mutate(draws_ci(tdr)) #> # A tibble: 2 × 5 #>   sex                  tdr tdr.lower tdr.mid tdr.upper #>   <chr>       <rdbl<1000>>     <dbl>   <dbl>     <dbl> #> 1 Female 0.22 (0.22, 0.23)     0.218   0.223     0.228 #> 2 Male   0.23 (0.22, 0.23)     0.221   0.226     0.231 divorce_ratio <- divorce_rv |>   pivot_wider(names_from = sex, values_from = rate) |>   mutate(ratio = Female / Male) |>   mutate(draws_ci(ratio)) ggplot(divorce_ratio,        aes(x = age,             ymin = ratio.lower,             y = ratio.mid,            ymax = ratio.upper)) +   geom_pointrange()"},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"sec:structure","dir":"Articles","previous_headings":"","what":"Structure of an rvec","title":"Package rvec","text":"class \"rvec\" four subclasses: \"rvec_dbl\", holds doubles, e.g. 3.142, -1.01. \"rvec_int\", holds integers, e.g. 42, -1. \"rvec_lgl\", holds TRUE, FALSE, NA. \"rvec_chr\", hold characters, e.g. \"\", \"Thomas Bayes\". Internally, rvec matrix, row representing one unknown quantity, column representing one draw joint distribution unknown quantities, Ordinary functions applied independently column. instance, calling sum() rvec creates new rvec structure Functions draws_ prefix applied independently row. instance, calling draws_mean() rvec creates new numeric vector structure rvec holds fixed number draws. Two rvecs can used together function rvecs contain number draws, one rvecs contains single draw.","code":""},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"creating-rvecs","dir":"Articles","previous_headings":"","what":"Creating rvecs","title":"Package rvec","text":"individual rvec can created list vectors, matrix, atomic vector Function rvec() chooses classes \"rvec_dbl\", \"rvec_int\", \"rvec_lgl\", \"rvec_chr\", based input. enforce particular class, use function rvec_dbl(), rvec_int(), rvec_lgl(), rvec_chr(), raw data take form database one draw per row, efficient way create rvecs use collapse_to_rvec(). See Section 2.2 example. Section 6 shows create rvec consisting draws standard probability distribution.","code":"x <- list(LETTERS, letters) rvec(x) #> <rvec_chr<26>[2]> #> [1] ..A.. ..a.. x <- matrix(rnorm(2000), nrow = 2) rvec(x) #> <rvec_dbl<1000>[2]> #> [1] -0.029 (-2, 2) -0.027 (-2, 2) x <- c(TRUE, FALSE) rvec(x) #> <rvec_lgl<1>[2]> #> [1] T F x <- list(1:3) rvec(x) #> <rvec_int<3>[1]> #> [1] 1,2,3 rvec_dbl(x) #> <rvec_dbl<3>[1]> #> [1] 1,2,3 rvec_chr(x) #> <rvec_chr<3>[1]> #> [1] \"1\",\"2\",\"3\""},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"mathematical-and-logical-operations","dir":"Articles","previous_headings":"","what":"Mathematical and logical operations","title":"Package rvec","text":"Mathematical logical operations applied independently draw. User-defined functions consist entirely standard mathematical logical operations work modifications. Multiplying rvec matrix produces rvec, rvec contains suite functions summarising weighted data: weighted_mad() weighted_mean() weighted_median() weighted_sd() weighted_var() built functions package matrixStats. elements rvec well-defined order one draw. Functions sort() order() fail called rvec, unless n_draw 1. Ranking , however, useful interpretation. apply ranking operation independently draw, return results integer rvec. rank 15-19 age group uncertain, rank 65+ age group estimated precisely.","code":"x <- rvec(list(c(TRUE, FALSE),                c(TRUE, TRUE))) all(x) #> <rvec_lgl<2>[1]> #> [1] T,F any(x) #> <rvec_lgl<2>[1]> #> [1] T,T logit <- function(p) log(p / (1-p)) tibble(   x = rvec(list(c(0.2, 0.4),                 c(0.6, 0.9))),   y = logit(x) ) #> # A tibble: 2 × 2 #>           x              y #>   <rdbl<2>>      <rdbl<2>> #> 1   0.2,0.4 -1.386,-0.4055 #> 2   0.6,0.9   0.4055,2.197 m <- rbind(c(1, 1),            c(0, 1)) x <- rvec(list(1:2,                3:4)) m %*% x #> <rvec_dbl<2>[2]> #> [1] 4,6 3,4 divorce_ratio |>    select(age, ratio) |>   mutate(rank = rank(ratio)) #> # A tibble: 11 × 3 #>    age               ratio         rank #>    <fct>      <rdbl<1000>> <rint<1000>> #>  1 15-19   1.7 (0.66, 4.3)   10 (2, 11) #>  2 20-24    2.1 (1.6, 2.6)  11 (10, 11) #>  3 25-29    1.6 (1.4, 1.7)    9 (9, 10) #>  4 30-34    1.2 (1.1, 1.3)     8 (8, 9) #>  5 35-39      1.1 (1, 1.2)     7 (5, 8) #>  6 40-44     1 (0.98, 1.1)     6 (5, 7) #>  7 45-49     1 (0.93, 1.1)     5 (5, 7) #>  8 50-54 0.89 (0.83, 0.94)     4 (4, 5) #>  9 55-59 0.79 (0.74, 0.85)     3 (2, 4) #> 10 60-64 0.73 (0.65, 0.82)     2 (2, 3) #> 11 65+   0.51 (0.45, 0.57)     1 (1, 1)"},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"sec:prob","dir":"Articles","previous_headings":"","what":"Probability distributions","title":"Package rvec","text":"Standard R probability functions dnorm() rbinom() allow rvec arguments. Package rvec provides modified functions . instance, return value rvec probability function rvec least one argument function rvec – one exception. exception random variate functions, value can supplied special argument called n_draw. value n_draw supplied, return value rvec n_draw draws, convenient way create inputs simulation.","code":"y <- rvec(list(c(-1, 0.2),                c(3, -7))) mu <- rvec(list(c(0, 1),                 c(0, -1))) dnorm_rvec(y, mean = mu, sd = 3) #> <rvec_dbl<2>[2]> #> [1] 0.1258,0.1283 0.08066,0.018 rbinom_rvec(n = 2, size = round(y+10), prob = 0.8) #> <rvec_int<2>[2]> #> [1] 7,9  12,1 rnorm_rvec(n = 3, mean = 100, sd = 10, n_draw = 2) #> <rvec_dbl<2>[3]> #> [1] 102.1,109.5 94.43,101.1 96.13,74.85"},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"subsetting","dir":"Articles","previous_headings":"7 Manipulating rvecs","what":"Subsetting","title":"Package rvec","text":"Standard R ways selecting elements vectors work rvecs.","code":"x <- rvec(list(a = 1:2,                b = 3:4,                c = 5:6)) x[1]  ## element number #> <rvec_int<2>[1]> #>   a  #> 1,2 x[c(\"a\", \"c\")]  ## element name #> <rvec_int<2>[2]> #>   a   c  #> 1,2 5,6 x[c(TRUE, FALSE, TRUE)]  ## logical flag #> <rvec_int<2>[2]> #>   a   c  #> 1,2 5,6"},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"sec:ifelse","dir":"Articles","previous_headings":"7 Manipulating rvecs","what":"If-Else","title":"Package rvec","text":"standard R function ifelse() work rvecs. tidyverse function if_else() works true, false, missing arguments rvecs, if_else()work, however, condition argument rvec. condition argument rvec, need rvec function if_else_rvec(), Function if_else_rvec() can used independently transform recode values across different draws,","code":"x <- rvec(list(1:2,                3:4)) if_else(condition = c(TRUE, FALSE),          true = x,         false = -x)         #> <rvec_int<2>[2]> #> [1] 1,2   -3,-4 if_else_rvec(x <= 2, x, 2) #> <rvec_dbl<2>[2]> #> [1] 1,2 2,2 x <- rvec(list(c(1, 3.3),                c(NA, -2))) x #> <rvec_dbl<2>[2]> #> [1] 1,3.3 NA,-2 x_recode <- if_else_rvec(is.na(x), 99, x) x_recode #> <rvec_dbl<2>[2]> #> [1] 1,3.3 99,-2"},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"combining","dir":"Articles","previous_headings":"7 Manipulating rvecs","what":"Combining","title":"Package rvec","text":"standard R concatenation function c() works rvecs, Unfortunately, cbind() rbind() made work properly raw rvecs, though cbind() work rvecs contained data frames Tidyverse equivalents dplyr::bind_rows(), dbplyr::bind_cols(), vctrs::vec_cbind(), vctrs::vec_rbind() work rvecs, Base R function sapply() work rvecs (unless simplify set FALSE). rvec supplies function called map_rvec() (based map functions package purrr) job:","code":"x1 <- rvec(list(c(0.1, 0.2),                 c(0.3, 0.4))) x2 <- rvec(list(c(0.5, 0.6),                 c(0.7, 0.8))) c(x1, x2) #> <rvec_dbl<2>[4]> #> [1] 0.1,0.2 0.3,0.4 0.5,0.6 0.7,0.8 rbind(x1, x2) #>    data      #> x1 numeric,4 #> x2 numeric,4 cbind(x1, x2) #>      x1        x2        #> data numeric,4 numeric,4 df1 <- data.frame(x1) df2 <- data.frame(x2) cbind(df1, df2) #>        x1      x2 #> 1 0.1,0.2 0.5,0.6 #> 2 0.3,0.4 0.7,0.8 library(vctrs, warn.conflicts = FALSE) vec_cbind(a = x1, b = x2) #>         a       b #> 1 0.1,0.2 0.5,0.6 #> 2 0.3,0.4 0.7,0.8 l <- list(a = rvec(list(c(1, 4))),           b = rvec(list(c(9, 16)))) l #> $a #> <rvec_dbl<2>[1]> #> [1] 1,4 #>  #> $b #> <rvec_dbl<2>[1]> #> [1] 9,16 map_rvec(l, sqrt) #> <rvec_dbl<2>[2]> #>   a   b  #> 1,2 3,4"},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"coercing","dir":"Articles","previous_headings":"7 Manipulating rvecs","what":"Coercing","title":"Package rvec","text":"Function .matrix() returns data underlying rvec. Function as_list_col() returns list vectors Functions point_interval package ggdist accept lists vector. good way access sophisticated plotting facilities ggdist, packages tidybayes bayesplot, use as_list_col() convert rvec list column. Function expand_from_rvec() inverse function collapse_to_rvec(), introduced Section 2.2.","code":"m <- matrix(1:6, nr = 2) m #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6 x <- rvec(m) x #> <rvec_int<3>[2]> #> [1] 1,3,5 2,4,6 as.matrix(x) #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6 as_list_col(x) #> [[1]] #> [1] 1 3 5 #>  #> [[2]] #> [1] 2 4 6 divorce |>   head(2) #> # A tibble: 2 × 4 #>   age   sex     draw   rate #>   <fct> <chr>  <int>  <dbl> #> 1 15-19 Female     1 0.0462 #> 2 15-19 Female     2 0.0369 divorce |>   collapse_to_rvec(values = rate) |>   head(2) #> # A tibble: 2 × 3 #>   age   sex                    rate #>   <fct> <chr>          <rdbl<1000>> #> 1 15-19 Female 0.036 (0.019, 0.068) #> 2 20-24 Female    0.67 (0.58, 0.78) divorce |>   collapse_to_rvec(values = rate) |>   expand_from_rvec() |>   head(2) #> # A tibble: 2 × 4 #>   age   sex     draw   rate #>   <fct> <chr>  <int>  <dbl> #> 1 15-19 Female     1 0.0462 #> 2 15-19 Female     2 0.0369"},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"summarising-distributions","dir":"Articles","previous_headings":"","what":"Summarising distributions","title":"Package rvec","text":"functions rvec concerned deriving random vectors random vectors: , column-wise calculations described Section 3. derived random vectors, typically want summarise , using statistics means quantiles: , want carry row-wise calculations. functions carrying row-wise calculations rvecs : draws_all() draws_any() draws_median() draws_mean() draws_mode() draws_ci() draws_quantile() draws_fun() Internally, functions call functions matrixStats, means fast. draws_ci(), calculates credible intervals, draws function used often,","code":"divorce_rv <- divorce |>   collapse_to_rvec(value = rate) divorce_rv #> # A tibble: 22 × 3 #>    age   sex                    rate #>    <fct> <chr>          <rdbl<1000>> #>  1 15-19 Female 0.036 (0.019, 0.068) #>  2 20-24 Female    0.67 (0.58, 0.78) #>  3 25-29 Female         3.2 (3, 3.4) #>  4 30-34 Female       5.8 (5.5, 6.1) #>  5 35-39 Female       6.5 (6.2, 6.9) #>  6 40-44 Female       7.1 (6.8, 7.4) #>  7 45-49 Female       7.2 (6.9, 7.6) #>  8 50-54 Female         6 (5.8, 6.3) #>  9 55-59 Female       4.4 (4.2, 4.7) #> 10 60-64 Female         2.7 (2.5, 3) #> # ℹ 12 more rows divorce_rv |>   mutate(draws_ci(rate)) #> # A tibble: 22 × 6 #>    age   sex                    rate rate.lower rate.mid rate.upper #>    <fct> <chr>          <rdbl<1000>>      <dbl>    <dbl>      <dbl> #>  1 15-19 Female 0.036 (0.019, 0.068)     0.0193   0.0360     0.0678 #>  2 20-24 Female    0.67 (0.58, 0.78)     0.579    0.673      0.782  #>  3 25-29 Female         3.2 (3, 3.4)     3.02     3.22       3.45   #>  4 30-34 Female       5.8 (5.5, 6.1)     5.54     5.80       6.06   #>  5 35-39 Female       6.5 (6.2, 6.9)     6.21     6.54       6.86   #>  6 40-44 Female       7.1 (6.8, 7.4)     6.85     7.13       7.42   #>  7 45-49 Female       7.2 (6.9, 7.6)     6.87     7.22       7.57   #>  8 50-54 Female         6 (5.8, 6.3)     5.77     6.03       6.33   #>  9 55-59 Female       4.4 (4.2, 4.7)     4.17     4.40       4.66   #> 10 60-64 Female         2.7 (2.5, 3)     2.48     2.72       2.99   #> # ℹ 12 more rows"},{"path":"https://bayesiandemography.github.io/rvec/articles/vig1_overview.html","id":"other-packages","dir":"Articles","previous_headings":"","what":"Other packages","title":"Package rvec","text":"first R package provide specialized object handling multiple draws rv. specialized object, called rv, can manipulated summarized much like rvec. However, software terms, rv strictly vector (calling .vector() one returns FALSE) rv always behave expected inside data frame. therefore well suited tidyverse-style work flows. R package posterior provides several data structures handling multiple draws, including one, called rvar, similar rvec. rvar , however, limited single dimension, special facilities dealing multiple chains (produced Markov chain Monte Carlo methods.) features essential analyses, can make rvars harder master, needed tidyverse-style work flows. Whereas rvecs interpret summary functions mean() sum() operations applied independently draw, rvars interpret operations applied across draws. result code written ordinary R vectors often work rvecs, need modification work rvars. tidyverse function count(), instance, works rvecs rvars.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John Bryant. Author, maintainer. Bayesian Demography Limited. Copyright holder.","code":""},{"path":"https://bayesiandemography.github.io/rvec/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryant J (2023). rvec: Vector Representing Random Variable. R package version 0.0.6, https://github.com/bayesiandemography/rvec, https://bayesiandemography.github.io/rvec/.","code":"@Manual{,   title = {rvec: Vector Representing a Random Variable},   author = {John Bryant},   year = {2023},   note = {R package version 0.0.6, https://github.com/bayesiandemography/rvec},   url = {https://bayesiandemography.github.io/rvec/}, }"},{"path":"https://bayesiandemography.github.io/rvec/index.html","id":"rvec-","dir":"","previous_headings":"","what":"Vector Representing a Random Variable","title":"Vector Representing a Random Variable","text":"Tools working random draws, including draws simulation Bayesian analysis. main data structure rvec, holds multiple draws behaves (mainly) like standard R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Vector Representing a Random Variable","text":"","code":"install.packages(\"rvec\")                            ## CRAN version devtools::install_github(\"bayesiandemography/rvec\") ## development version"},{"path":"https://bayesiandemography.github.io/rvec/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Vector Representing a Random Variable","text":"Create rvec. Perform arithmetic . Put tibble. Manipulate tibble. Summarise .","code":"library(rvec, warn.conflicts = FALSE) library(dplyr, warn.conflicts = FALSE) x <- rvec(rbind(c(10, 11),                 c(100, 101),                 c(1000, 1001))) x #> <rvec_dbl<2>[3]> #> [1] 10,11     100,101   1000,1001 x + 1 #> <rvec_dbl<2>[3]> #> [1] 11,12     101,102   1001,1002 df <- tibble(g = c(1, 2, 1), x) df #> # A tibble: 3 × 2 #>       g         x #>   <dbl> <rdbl<2>> #> 1     1     10,11 #> 2     2   100,101 #> 3     1 1000,1001 df %>%   group_by(g) %>%   count(wt = x) #> # A tibble: 2 × 2 #> # Groups:   g [2] #>       g         n #>   <dbl> <rdbl<2>> #> 1     1 1010,1012 #> 2     2   100,101 draws_mean(x) #> [1]   10.5  100.5 1000.5"},{"path":"https://bayesiandemography.github.io/rvec/index.html","id":"other-packages-for-working-with-random-draws","dir":"","previous_headings":"","what":"Other packages for working with random draws","title":"Vector Representing a Random Variable","text":"rv posterior","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/as_list_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to List Column — as_list_col","title":"Convert to List Column — as_list_col","text":"Convert rvec matrix list can used list column data frame.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/as_list_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to List Column — as_list_col","text":"","code":"as_list_col(x)  # S3 method for rvec as_list_col(x)  # S3 method for matrix as_list_col(x)"},{"path":"https://bayesiandemography.github.io/rvec/reference/as_list_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to List Column — as_list_col","text":"x rvecs matrix.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/as_list_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to List Column — as_list_col","text":"list: x rvec, list contains length(x) vectors, n_draw(x) elements. x matrix, list contains nrow(x) vectors, ncol(x) elements.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/as_list_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to List Column — as_list_col","text":"","code":"l <- list(1:3,           4:6) r <- rvec(l) as_list_col(r) #> [[1]] #> [1] 1 2 3 #>  #> [[2]] #> [1] 4 5 6 #>"},{"path":"https://bayesiandemography.github.io/rvec/reference/collapse_to_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Data Frame Between 'Database'\nand 'Rvec' Formats — collapse_to_rvec","title":"Convert a Data Frame Between 'Database'\nand 'Rvec' Formats — collapse_to_rvec","text":"collapse_to_rvec() converts data frame 'database' format 'rvec' format. expand_from_rvec(), opposite, converting data frame rvecs format database format.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/collapse_to_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Data Frame Between 'Database'\nand 'Rvec' Formats — collapse_to_rvec","text":"","code":"collapse_to_rvec(data, draw = draw, values = value, by = NULL, type = NULL)  # S3 method for data.frame collapse_to_rvec(data, draw = draw, values = value, by = NULL, type = NULL)  # S3 method for grouped_df collapse_to_rvec(data, draw = draw, values = value, by = NULL, type = NULL)  expand_from_rvec(data, draw = \"draw\")  # S3 method for data.frame expand_from_rvec(data, draw = \"draw\")  # S3 method for grouped_df expand_from_rvec(data, draw = \"draw\")"},{"path":"https://bayesiandemography.github.io/rvec/reference/collapse_to_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Data Frame Between 'Database'\nand 'Rvec' Formats — collapse_to_rvec","text":"data data frame, possibly grouped. draw <tidyselect> variable uniquely identifies random draws within combination values '' variables. Must quoted expand_from_rvec(). values <tidyselect> One variables data hold measurements. <tidyselect> Variables used stratify cross-classify data. See Details. type String specifying class rvec use variable. Optional. See Details.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/collapse_to_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Data Frame Between 'Database'\nand 'Rvec' Formats — collapse_to_rvec","text":"data frame. collapse_to_rvec() reduces number rows factor n_draw(). expand_from_rvec() increases number rows factor n_draw(). collapse_to_rvec() silently drops variables draw, value grouping variables data grouped data frame.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/collapse_to_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a Data Frame Between 'Database'\nand 'Rvec' Formats — collapse_to_rvec","text":"database format, row represents one random draw. data frame contains 'draw' variable distinguishes different draws within combination '' variables. rvec format, row represents one combination '' variables, multiple draws stored rvec. See examples.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/collapse_to_rvec.html","id":"by-argument","dir":"Reference","previous_headings":"","what":"by argument","title":"Convert a Data Frame Between 'Database'\nand 'Rvec' Formats — collapse_to_rvec","text":"argument used specify stratifying variables. instance includes sex age, data frame produced collapse_to_rvec() separate rows combination sex age. data grouped data frame, grouping variables take precedence . value provided, data grouped data frame, collapse_to_rvec() assumes variables data included value draw included .","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/collapse_to_rvec.html","id":"type-argument","dir":"Reference","previous_headings":"","what":"type argument","title":"Convert a Data Frame Between 'Database'\nand 'Rvec' Formats — collapse_to_rvec","text":"default, collapse_to_rvec() calls function rvec() values variable data. rvec() chooses class output (ie rvec_chr, rvec_dbl, rvec_int, rvec_lgl) depending input. Types can instead specified advance, using type argument. type string, character specifies class corresponding values variable. characters following meanings: \"c\": rvec_chr \"d\": rvec_dbl \"\": rvec_int \"l\": rvec_lgl \"?\": Depends inputs. codes type modified ones used readr package.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/collapse_to_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Data Frame Between 'Database'\nand 'Rvec' Formats — collapse_to_rvec","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union data_db <- tribble(   ~occupation,    ~sim, ~pay,   \"Statistician\", 1,    100,   \"Statistician\", 2,    80,   \"Statistician\", 3,    105,   \"Banker\",       1,    400,   \"Banker\",       2,    350,   \"Banker\",       3,    420 )  ## database format to rvec format data_rv <- data_db |>   collapse_to_rvec(draw = sim,                    values = pay) data_rv #> # A tibble: 2 × 2 #>   occupation           pay #>   <chr>          <rdbl<3>> #> 1 Statistician  100,80,105 #> 2 Banker       400,350,420  ## rvec format to database format data_rv |>   expand_from_rvec() #> # A tibble: 6 × 3 #>   occupation    draw   pay #>   <chr>        <int> <dbl> #> 1 Statistician     1   100 #> 2 Statistician     2    80 #> 3 Statistician     3   105 #> 4 Banker           1   400 #> 5 Banker           2   350 #> 6 Banker           3   420  ## provide a name for the draw variable data_rv |>   expand_from_rvec(draw = \"sim\") #> # A tibble: 6 × 3 #>   occupation     sim   pay #>   <chr>        <int> <dbl> #> 1 Statistician     1   100 #> 2 Statistician     2    80 #> 3 Statistician     3   105 #> 4 Banker           1   400 #> 5 Banker           2   350 #> 6 Banker           3   420  ## specify that rvec variable ## must be rvec_int data_rv <- data_db |>   collapse_to_rvec(draw = sim,                    values = pay,                    type = \"i\")  ## specify stratifying variable explicitly, ## using 'by' argument data_db |>   collapse_to_rvec(draw = sim,                    values = pay,                    by = occupation) #> # A tibble: 2 × 2 #>   occupation           pay #>   <chr>          <rdbl<3>> #> 1 Statistician  100,80,105 #> 2 Banker       400,350,420  ## specify stratifying variable explicitly, ## using 'group_by' library(dplyr) data_db |>   group_by(occupation) |>   collapse_to_rvec(draw = sim,                    values = pay) #> # A tibble: 2 × 2 #> # Groups:   occupation [2] #>   occupation           pay #>   <chr>          <rdbl<3>> #> 1 Statistician  100,80,105 #> 2 Banker       400,350,420"},{"path":"https://bayesiandemography.github.io/rvec/reference/dbeta_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Beta Distribution, Using Multiple Draws — dbeta_rvec","title":"The Beta Distribution, Using Multiple Draws — dbeta_rvec","text":"Density, distribution function, quantile function random generation Beta distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dbeta_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Beta Distribution, Using Multiple Draws — dbeta_rvec","text":"","code":"dbeta_rvec(x, shape1, shape2, ncp = 0, log = FALSE)  pbeta_rvec(q, shape1, shape2, ncp = 0, lower.tail = TRUE, log.p = FALSE)  qbeta_rvec(p, shape1, shape2, ncp = 0, lower.tail = TRUE, log.p = FALSE)  rbeta_rvec(n, shape1, shape2, ncp = 0, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dbeta_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Beta Distribution, Using Multiple Draws — dbeta_rvec","text":"x Quantiles. Can rvec. shape1, shape2 Parameters beta distribution. Non-negative. See stats::dbeta(). Can rvecs. ncp Non-centrality parameter. Default 0. rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dbeta_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Beta Distribution, Using Multiple Draws — dbeta_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dbeta_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Beta Distribution, Using Multiple Draws — dbeta_rvec","text":"Functions dbeta_rvec(), pbeta_rvec(), pbeta_rvec() rbeta_rvec() work like base R functions dbeta(), pbeta(), qbeta(), rbeta(), except accept rvecs inputs. input rvec, output . Function rbeta_rvec() also returns rvec value n_draw supplied. dbeta_rvec(), pbeta_rvec(), pbeta_rvec() rbeta_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dbeta_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Beta Distribution, Using Multiple Draws — dbeta_rvec","text":"","code":"x <- rvec(list(c(0, 0.25),                c(0.5, 0.99))) dbeta_rvec(x, shape1 = 1, shape2 = 1) #> <rvec_dbl<2>[2]> #> [1] 1,1 1,1 pbeta_rvec(x, shape1 = 1, shape2 = 1) #> <rvec_dbl<2>[2]> #> [1] 0,0.25   0.5,0.99  rbeta_rvec(n = 2,            shape = 1:2,            shape2 = 1,            n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] 0.48 (0.023, 0.97) 0.72 (0.13, 0.98)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dbinom_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Binomial Distribution, Using Multiple Draws — dbinom_rvec","title":"The Binomial Distribution, Using Multiple Draws — dbinom_rvec","text":"Density, distribution function, quantile function random generation binomial distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dbinom_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Binomial Distribution, Using Multiple Draws — dbinom_rvec","text":"","code":"dbinom_rvec(x, size, prob, log = FALSE)  pbinom_rvec(q, size, prob, lower.tail = TRUE, log.p = FALSE)  qbinom_rvec(p, size, prob, lower.tail = TRUE, log.p = FALSE)  rbinom_rvec(n, size, prob, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dbinom_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Binomial Distribution, Using Multiple Draws — dbinom_rvec","text":"x Quantiles. Can rvec. size Number trials. See stats::dbinom(). Can rvec. prob Probability success trial. See stats::dbinom(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dbinom_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Binomial Distribution, Using Multiple Draws — dbinom_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dbinom_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Binomial Distribution, Using Multiple Draws — dbinom_rvec","text":"Functions dbinom_rvec(), pbinom_rvec(), pbinom_rvec() rbinom_rvec() work like base R functions dbinom(), pbinom(), qbinom(), rbinom(), except accept rvecs inputs. input rvec, output . Function rbinom_rvec() also returns rvec value n_draw supplied. dbinom_rvec(), pbinom_rvec(), pbinom_rvec() rbinom_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dbinom_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Binomial Distribution, Using Multiple Draws — dbinom_rvec","text":"","code":"x <- rvec(list(c(3, 8),                c(0, 2))) dbinom_rvec(x, size = 8, prob = 0.3) #> <rvec_dbl<2>[2]> #> [1] 0.2541,0.00006561 0.05765,0.2965    pbinom_rvec(x, size = 8, prob = 0.3) #> <rvec_dbl<2>[2]> #> [1] 0.8059,1       0.05765,0.5518  rbinom_rvec(n = 2,             size = 10,             prob = c(0.7, 0.3),             n_draw = 1000) #> <rvec_int<1000>[2]> #> [1] 7 (4, 10) 3 (0, 6)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dcauchy_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Cauchy Distribution, Using Multiple Draws — dcauchy_rvec","title":"The Cauchy Distribution, Using Multiple Draws — dcauchy_rvec","text":"Density, distribution function, quantile function random generation Cauchy distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dcauchy_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Cauchy Distribution, Using Multiple Draws — dcauchy_rvec","text":"","code":"dcauchy_rvec(x, location = 0, scale = 1, log = FALSE)  pcauchy_rvec(q, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE)  qcauchy_rvec(p, location = 0, scale = 1, lower.tail = TRUE, log.p = FALSE)  rcauchy_rvec(n, location = 0, scale = 1, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dcauchy_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Cauchy Distribution, Using Multiple Draws — dcauchy_rvec","text":"x Quantiles. Can rvec. location Center distribution. Default 0. See stats::dcauchy(). Can rvec. scale Scale parameter. Default 1. See stats::dcauchy(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dcauchy_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Cauchy Distribution, Using Multiple Draws — dcauchy_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dcauchy_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Cauchy Distribution, Using Multiple Draws — dcauchy_rvec","text":"Functions dcauchy_rvec(), pcauchy_rvec(), pcauchy_rvec() rcauchy_rvec() work like base R functions dcauchy(), pcauchy(), qcauchy(), rcauchy(), except accept rvecs inputs. input rvec, output . Function rcauchy_rvec() also returns rvec value n_draw supplied. dcauchy_rvec(), pcauchy_rvec(), pcauchy_rvec() rcauchy_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dcauchy_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Cauchy Distribution, Using Multiple Draws — dcauchy_rvec","text":"","code":"x <- rvec(list(c(3, -5.1),                c(0, -2.3))) dcauchy_rvec(x) #> <rvec_dbl<2>[2]> #> [1] 0.03183,0.01178 0.3183,0.05061  pcauchy_rvec(x) #> <rvec_dbl<2>[2]> #> [1] 0.8976,0.06163 0.5,0.1305      rcauchy_rvec(n = 2,              location = c(-5, 5),              n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] -5 (-17, 4.6)  4.9 (-6.8, 15)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dchisq_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Chi-Squared Distribution, Using Multiple Draws — dchisq_rvec","title":"The Chi-Squared Distribution, Using Multiple Draws — dchisq_rvec","text":"Density, distribution function, quantile function random generation chi-squared distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dchisq_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Chi-Squared Distribution, Using Multiple Draws — dchisq_rvec","text":"","code":"dchisq_rvec(x, df, ncp = 0, log = FALSE)  pchisq_rvec(q, df, ncp = 0, lower.tail = TRUE, log.p = FALSE)  qchisq_rvec(p, df, ncp = 0, lower.tail = TRUE, log.p = FALSE)  rchisq_rvec(n, df, ncp = 0, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dchisq_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Chi-Squared Distribution, Using Multiple Draws — dchisq_rvec","text":"x Quantiles. Can rvec. df Degrees freedom. See stats::dchisq(). Can rvec. ncp Non-centrality parameter. Default 0. rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dchisq_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Chi-Squared Distribution, Using Multiple Draws — dchisq_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dchisq_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Chi-Squared Distribution, Using Multiple Draws — dchisq_rvec","text":"Functions dchisq_rvec(), pchisq_rvec(), pchisq_rvec() rchisq_rvec() work like base R functions dchisq(), pchisq(), qchisq(), rchisq(), except accept rvecs inputs. input rvec, output . Function rchisq_rvec() also returns rvec value n_draw supplied. dchisq_rvec(), pchisq_rvec(), pchisq_rvec() rchisq_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dchisq_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Chi-Squared Distribution, Using Multiple Draws — dchisq_rvec","text":"","code":"x <- rvec(list(c(3, 5.1),                c(0.1, 2.3))) dchisq_rvec(x, df = 3) #> <rvec_dbl<2>[2]> #> [1] 0.1542,0.07035 0.12,0.1916    pchisq_rvec(x, df = 3) #> <rvec_dbl<2>[2]> #> [1] 0.6084,0.8354   0.008163,0.4875  rchisq_rvec(n = 2,             df = 3:4,             n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] 2.4 (0.18, 8.8) 3.4 (0.52, 11)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dexp_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Exponential Distribution, Using Multiple Draws — dexp_rvec","title":"The Exponential Distribution, Using Multiple Draws — dexp_rvec","text":"Density, distribution function, quantile function random generation exponential distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dexp_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Exponential Distribution, Using Multiple Draws — dexp_rvec","text":"","code":"dexp_rvec(x, rate = 1, log = FALSE)  pexp_rvec(q, rate = 1, lower.tail = TRUE, log.p = FALSE)  qexp_rvec(p, rate = 1, lower.tail = TRUE, log.p = FALSE)  rexp_rvec(n, rate = 1, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dexp_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Exponential Distribution, Using Multiple Draws — dexp_rvec","text":"x Quantiles. Can rvec. rate Vector rates. See stats::dexp(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dexp_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Exponential Distribution, Using Multiple Draws — dexp_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dexp_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Exponential Distribution, Using Multiple Draws — dexp_rvec","text":"Functions dexp_rvec(), pexp_rvec(), pexp_rvec() rexp_rvec() work like base R functions dexp(), pexp(), qexp(), rexp(), except accept rvecs inputs. input rvec, output . Function rexp_rvec() also returns rvec value n_draw supplied. dexp_rvec(), pexp_rvec(), pexp_rvec() rexp_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dexp_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Exponential Distribution, Using Multiple Draws — dexp_rvec","text":"","code":"x <- rvec(list(c(3, 5.1),                c(0.1, 2.3))) dexp_rvec(x, rate = 1.5) #> <rvec_dbl<2>[2]> #> [1] 0.01666,0.0007141 1.291,0.04762     pexp_rvec(x, rate = 1.5) #> <rvec_dbl<2>[2]> #> [1] 0.9889,0.9995 0.1393,0.9683  rexp_rvec(n = 2,           rate = c(1.5, 4),           n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] 0.41 (0.016, 2.5)   0.17 (0.0089, 0.94)"},{"path":"https://bayesiandemography.github.io/rvec/reference/df_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The F Distribution, Using Multiple Draws — df_rvec","title":"The F Distribution, Using Multiple Draws — df_rvec","text":"Density, distribution function, quantile function random generation F distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/df_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The F Distribution, Using Multiple Draws — df_rvec","text":"","code":"df_rvec(x, df1, df2, ncp = 0, log = FALSE)  pf_rvec(q, df1, df2, ncp = 0, lower.tail = TRUE, log.p = FALSE)  qf_rvec(p, df1, df2, ncp = 0, lower.tail = TRUE, log.p = FALSE)  rf_rvec(n, df1, df2, ncp = 0, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/df_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The F Distribution, Using Multiple Draws — df_rvec","text":"x Quantiles. Can rvec. df1, df2 Degrees freedom. See stats::df(). Can rvecs. ncp Non-centrality parameter. Default 0. rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/df_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The F Distribution, Using Multiple Draws — df_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/df_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The F Distribution, Using Multiple Draws — df_rvec","text":"Functions df_rvec(), pf_rvec(), pf_rvec() rf_rvec() work like base R functions df(), pf(), qf(), rf(), except accept rvecs inputs. input rvec, output . Function rf_rvec() also returns rvec value n_draw supplied. df_rvec(), pf_rvec(), pf_rvec() rf_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/df_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The F Distribution, Using Multiple Draws — df_rvec","text":"","code":"x <- rvec(list(c(3, 5.1),                c(0.1, 2.3))) df_rvec(x, df1 = 1, df2 = 3) #> <rvec_dbl<2>[2]> #> [1] 0.05305,0.02233 1.089,0.07765   pf_rvec(x, df1 = 1, df2 = 3) #> <rvec_dbl<2>[2]> #> [1] 0.8183,0.8909 0.2274,0.7734  rf_rvec(n = 2, df1 = 1,df2 = 2:3, n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] 0.64 (0.00093, 36) 0.55 (8e-04, 18)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dgamma_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Gamma Distribution, Using Multiple Draws — dgamma_rvec","title":"The Gamma Distribution, Using Multiple Draws — dgamma_rvec","text":"Density, distribution function, quantile function random generation gamma distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dgamma_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Gamma Distribution, Using Multiple Draws — dgamma_rvec","text":"","code":"dgamma_rvec(x, shape, rate = 1, scale = 1/rate, log = FALSE)  pgamma_rvec(   q,   shape,   rate = 1,   scale = 1/rate,   lower.tail = TRUE,   log.p = FALSE )  qgamma_rvec(   p,   shape,   rate = 1,   scale = 1/rate,   lower.tail = TRUE,   log.p = FALSE )  rgamma_rvec(n, shape, rate = 1, scale = 1/rate, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dgamma_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Gamma Distribution, Using Multiple Draws — dgamma_rvec","text":"x Quantiles. Can rvec. shape Shape parameter. See stats::dgamma(). Can rvec. rate Rate parameter. See stats::dgamma(). Can rvec. scale Scale parameter. alterative rate. See stats::dgamma(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dgamma_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Gamma Distribution, Using Multiple Draws — dgamma_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dgamma_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Gamma Distribution, Using Multiple Draws — dgamma_rvec","text":"Functions dgamma_rvec(), pgamma_rvec(), pgamma_rvec() rgamma_rvec() work like base R functions dgamma(), pgamma(), qgamma(), rgamma(), except accept rvecs inputs. input rvec, output . Function rgamma_rvec() also returns rvec value n_draw supplied. dgamma_rvec(), pgamma_rvec(), pgamma_rvec() rgamma_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dgamma_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Gamma Distribution, Using Multiple Draws — dgamma_rvec","text":"","code":"x <- rvec(list(c(3, 5.1),                c(0.1, 2.3))) dgamma_rvec(x, shape = 1) #> <rvec_dbl<2>[2]> #> [1] 0.04979,0.006097 0.9048,0.1003    pgamma_rvec(x, shape = 1) #> <rvec_dbl<2>[2]> #> [1] 0.9502,0.9939  0.09516,0.8997  rgamma_rvec(n = 2,             shape = 1,             rate = c(0.5, 1),             n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] 1.4 (0.047, 7.2) 0.62 (0.02, 3.6)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dgeom_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Geometric Distribution, Using Multiple Draws — dgeom_rvec","title":"The Geometric Distribution, Using Multiple Draws — dgeom_rvec","text":"Density, distribution function, quantile function random generation geometric distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dgeom_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Geometric Distribution, Using Multiple Draws — dgeom_rvec","text":"","code":"dgeom_rvec(x, prob, log = FALSE)  pgeom_rvec(q, prob, lower.tail = TRUE, log.p = FALSE)  qgeom_rvec(p, prob, lower.tail = TRUE, log.p = FALSE)  rgeom_rvec(n, prob, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dgeom_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Geometric Distribution, Using Multiple Draws — dgeom_rvec","text":"x Quantiles. Can rvec. prob Probability success trial. See stats::dgeom(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dgeom_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Geometric Distribution, Using Multiple Draws — dgeom_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dgeom_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Geometric Distribution, Using Multiple Draws — dgeom_rvec","text":"Functions dgeom_rvec(), pgeom_rvec(), pgeom_rvec() rgeom_rvec() work like base R functions dgeom(), pgeom(), qgeom(), rgeom(), except accept rvecs inputs. input rvec, output . Function rgeom_rvec() also returns rvec value n_draw supplied. dgeom_rvec(), pgeom_rvec(), pgeom_rvec() rgeom_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dgeom_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Geometric Distribution, Using Multiple Draws — dgeom_rvec","text":"","code":"x <- rvec(list(c(3, 5),                c(0, 2))) dgeom_rvec(x, prob = 0.3) #> <rvec_dbl<2>[2]> #> [1] 0.1029,0.05042 0.3,0.147      pgeom_rvec(x, prob = 0.3) #> <rvec_dbl<2>[2]> #> [1] 0.7599,0.8824 0.3,0.657      rgeom_rvec(n = 2,            prob = c(0.5, 0.8),            n_draw = 1000) #> <rvec_int<1000>[2]> #> [1] 0 (0, 5) 0 (0, 2)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dhyper_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Hypergeometric Distribution, Using Multiple Draws — dhyper_rvec","title":"The Hypergeometric Distribution, Using Multiple Draws — dhyper_rvec","text":"Density, distribution function, quantile function random generation hypergeometric distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dhyper_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Hypergeometric Distribution, Using Multiple Draws — dhyper_rvec","text":"","code":"dhyper_rvec(x, m, n, k, log = FALSE)  phyper_rvec(q, m, n, k, lower.tail = TRUE, log.p = FALSE)  qhyper_rvec(p, m, n, k, lower.tail = TRUE, log.p = FALSE)  rhyper_rvec(nn, m, n, k, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dhyper_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Hypergeometric Distribution, Using Multiple Draws — dhyper_rvec","text":"x Quantiles. Can rvec. m Number white balls urn. See stats::dhyper(). Can rvec. n Number black balls urn. See stats::rhyper(). Can rvec. k Number balls drawn urn. See stats::dhyper(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. nn length random vector created. equivalent n random variate functions. See stats::rhyper(). rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dhyper_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Hypergeometric Distribution, Using Multiple Draws — dhyper_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dhyper_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Hypergeometric Distribution, Using Multiple Draws — dhyper_rvec","text":"Functions dhyper_rvec(), phyper_rvec(), phyper_rvec() rhyper_rvec() work like base R functions dhyper(), phyper(), qhyper(), rhyper(), except accept rvecs inputs. input rvec, output . Function rhyper_rvec() also returns rvec value n_draw supplied. dhyper_rvec(), phyper_rvec(), phyper_rvec() rhyper_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dhyper_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Hypergeometric Distribution, Using Multiple Draws — dhyper_rvec","text":"","code":"x <- rvec(list(c(3, 5),                c(0, 2))) dhyper_rvec(x, m = 6, n = 6, k = 5) #> <rvec_dbl<2>[2]> #> [1] 0.3788,0.007576 0.007576,0.3788 phyper_rvec(x, m = 6, n = 6, k = 5) #> <rvec_dbl<2>[2]> #> [1] 0.8788,1     0.007576,0.5  rhyper_rvec(nn = 2,             k = c(3, 5),             m = 6,             n = 6,             n_draw = 1000) #> <rvec_int<1000>[2]> #> [1] 2 (0, 3) 3 (1, 4)"},{"path":"https://bayesiandemography.github.io/rvec/reference/divorce.html","id":null,"dir":"Reference","previous_headings":"","what":"Divorce Rates in New Zealand — divorce","title":"Divorce Rates in New Zealand — divorce","text":"Posterior sample model divorce rates New Zealand.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/divorce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divorce Rates in New Zealand — divorce","text":"","code":"divorce"},{"path":"https://bayesiandemography.github.io/rvec/reference/divorce.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Divorce Rates in New Zealand — divorce","text":"tibble 30,000 rows following variables: age: Age, 5-year age groups, 15-19 65+. sex: \"Female\" \"Male\". draw: Index random draw. rate: Divorce rate, per 1000.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/divorce.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Divorce Rates in New Zealand — divorce","text":"Derived data tables \"Age divorces sex (marriages civil unions) (Annual-Dec)\" \"Estimated Resident Population Age Sex (1991+) (Annual-Dec)\" online database Infoshare Statistics New Zealand website, downloaded 22 March 2023.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dlnorm_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Log-Normal Distribution, Using Multiple Draws — dlnorm_rvec","title":"The Log-Normal Distribution, Using Multiple Draws — dlnorm_rvec","text":"Density, distribution function, quantile function random generation log-normal distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dlnorm_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Log-Normal Distribution, Using Multiple Draws — dlnorm_rvec","text":"","code":"dlnorm_rvec(x, meanlog = 0, sdlog = 1, log = FALSE)  plnorm_rvec(q, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE)  qlnorm_rvec(p, meanlog = 0, sdlog = 1, lower.tail = TRUE, log.p = FALSE)  rlnorm_rvec(n, meanlog = 0, sdlog = 1, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dlnorm_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Log-Normal Distribution, Using Multiple Draws — dlnorm_rvec","text":"x Quantiles. Can rvec. meanlog Mean distribution, log scale. Default 0. See stats::dlnorm(). Can rvec. sdlog Standard deviation distribution, log scale. Default 1. See stats::dlnorm(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dlnorm_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Log-Normal Distribution, Using Multiple Draws — dlnorm_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dlnorm_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Log-Normal Distribution, Using Multiple Draws — dlnorm_rvec","text":"Functions dlnorm_rvec(), plnorm_rvec(), plnorm_rvec() rlnorm_rvec() work like base R functions dlnorm(), plnorm(), qlnorm(), rlnorm(), except accept rvecs inputs. input rvec, output . Function rlnorm_rvec() also returns rvec value n_draw supplied. dlnorm_rvec(), plnorm_rvec(), plnorm_rvec() rlnorm_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dlnorm_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Log-Normal Distribution, Using Multiple Draws — dlnorm_rvec","text":"","code":"x <- rvec(list(c(3.1, 5.7),                c(0.2, 2.3))) dlnorm_rvec(x) #> <rvec_dbl<2>[2]> #> [1] 0.06786,0.01539 0.5463,0.1226   plnorm_rvec(x) #> <rvec_dbl<2>[2]> #> [1] 0.8711,0.9591  0.05376,0.7976  rlnorm_rvec(n = 2,             meanlog = c(1, 3),             n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] 2.8 (0.44, 20) 20 (2.8, 139)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dmultinom_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Multinomial Distribution, Using Multiple Draws — dmultinom_rvec","title":"The Multinomial Distribution, Using Multiple Draws — dmultinom_rvec","text":"Density function random generation multinomial distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dmultinom_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Multinomial Distribution, Using Multiple Draws — dmultinom_rvec","text":"","code":"dmultinom_rvec(x, size = NULL, prob, log = FALSE)  rmultinom_rvec(n, size, prob, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dmultinom_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Multinomial Distribution, Using Multiple Draws — dmultinom_rvec","text":"x Quantiles. Can rvec. size Total number trials. See stats::dmultinom(). Can rvec. prob Numeric non-negative vector, giving probability outcome. Internally normalized sum 1. See stats::dmultinom(). Can rvec. log Whether return log(p) rather p. Default FALSE. rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dmultinom_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Multinomial Distribution, Using Multiple Draws — dmultinom_rvec","text":"dmultinom() arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector. rmultinom() n 1, rvec ordinary R vector. n greater 1, list rvecs ordinary R vectors","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dmultinom_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Multinomial Distribution, Using Multiple Draws — dmultinom_rvec","text":"Functions dmultinom_rvec()rmultinom_rvec() work like base R functions dmultinom() rmultinom(), except accept rvecs inputs. input rvec, output . Function rmultinom_rvec() also returns rvec value n_draw supplied. Like base R functions dmultinom() [rmultinom(), dmultinom_rvec() rmultinom_rvec() recycle arguments.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dmultinom_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Multinomial Distribution, Using Multiple Draws — dmultinom_rvec","text":"","code":"x <- rvec(list(c(1, 4, 0),                c(1, 0, 0),                c(1, 0, 0),                c(1, 0, 4))) prob <- c(1/4, 1/4, 1/4, 1/4) dmultinom_rvec(x = x, prob = prob) #> <rvec_dbl<3>[1]> #> [1] 0.09375,0.003906,0.003906 rmultinom_rvec(n = 1,                size = 100,                prob = c(0.1, 0.4, 0.2, 0.3),                n_draw = 1000) #> <rvec_int<1000>[4]> #> [1] 10 (5, 16)  39 (30, 50) 20 (13, 28) 30 (22, 40)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dnbinom_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Negative Binomial Distribution, Using Multiple Draws — dnbinom_rvec","title":"The Negative Binomial Distribution, Using Multiple Draws — dnbinom_rvec","text":"Density, distribution function, quantile function random generation negative binomial distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dnbinom_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Negative Binomial Distribution, Using Multiple Draws — dnbinom_rvec","text":"","code":"dnbinom_rvec(x, size, prob, mu, log = FALSE)  pnbinom_rvec(q, size, prob, mu, lower.tail = TRUE, log.p = FALSE)  qnbinom_rvec(p, size, prob, mu, lower.tail = TRUE, log.p = FALSE)  rnbinom_rvec(n, size, prob, mu, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dnbinom_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Negative Binomial Distribution, Using Multiple Draws — dnbinom_rvec","text":"x Quantiles. Can rvec. size Number trials. See stats::dnbinom(). Can rvec. prob Probability success trial. See stats::dnbinom(). Can rvec. mu Mean value. See stats::dnbinom(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dnbinom_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Negative Binomial Distribution, Using Multiple Draws — dnbinom_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dnbinom_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Negative Binomial Distribution, Using Multiple Draws — dnbinom_rvec","text":"Functions dnbinom_rvec(), pnbinom_rvec(), pnbinom_rvec() rnbinom_rvec() work like base R functions dnbinom(), pnbinom(), qnbinom(), rnbinom(), except accept rvecs inputs. input rvec, output . Function rnbinom_rvec() also returns rvec value n_draw supplied. dnbinom_rvec(), pnbinom_rvec(), pnbinom_rvec() rnbinom_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dnbinom_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Negative Binomial Distribution, Using Multiple Draws — dnbinom_rvec","text":"","code":"x <- rvec(list(c(3, 5),                c(0, 2))) dnbinom_rvec(x, size = 6, prob = 0.2) #> <rvec_dbl<2>[2]> #> [1] 0.001835,0.005285  0.000064,0.0008602 pnbinom_rvec(x, size = 6, prob = 0.2) #> <rvec_dbl<2>[2]> #> [1] 0.003066,0.01165  0.000064,0.001231  rnbinom_rvec(n = 2,              size = 2,              mu = c(4, 8),              n_draw = 1000) #> <rvec_int<1000>[2]> #> [1] 3 (0, 12) 7 (0, 24)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dnorm_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Normal Distribution, Using Multiple Draws — dnorm_rvec","title":"The Normal Distribution, Using Multiple Draws — dnorm_rvec","text":"Density, distribution function, quantile function random generation normal distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dnorm_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Normal Distribution, Using Multiple Draws — dnorm_rvec","text":"","code":"dnorm_rvec(x, mean = 0, sd = 1, log = FALSE)  pnorm_rvec(q, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)  qnorm_rvec(p, mean = 0, sd = 1, lower.tail = TRUE, log.p = FALSE)  rnorm_rvec(n, mean = 0, sd = 1, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dnorm_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Normal Distribution, Using Multiple Draws — dnorm_rvec","text":"x Quantiles. Can rvec. mean Mean distribution. Default 0.  See stats::dnorm(). Can rvec. sd Standard deviation. Default 1. See stats::dnorm(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dnorm_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Normal Distribution, Using Multiple Draws — dnorm_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dnorm_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Normal Distribution, Using Multiple Draws — dnorm_rvec","text":"Functions dnorm_rvec(), pnorm_rvec(), pnorm_rvec() rnorm_rvec() work like base R functions dnorm(), pnorm(), qnorm(), rnorm(), except accept rvecs inputs. input rvec, output . Function rnorm_rvec() also returns rvec value n_draw supplied. dnorm_rvec(), pnorm_rvec(), pnorm_rvec() rnorm_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dnorm_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Normal Distribution, Using Multiple Draws — dnorm_rvec","text":"","code":"x <- rvec(list(c(3.1, -5.4),                c(0.1, 2.3))) dnorm_rvec(x) #> <rvec_dbl<2>[2]> #> [1] 0.003267,0.0000001857 0.397,0.02833         pnorm_rvec(x) #> <rvec_dbl<2>[2]> #> [1] 0.999,0.00000003332 0.5398,0.9893        rnorm_rvec(n = 2,            mean = c(-3, 3),            sd = c(2, 4),            n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] -2.9 (-7.1, 0.73) 3 (-5.2, 11)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dpois_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"The Poisson Distribution, Using Multiple Draws — dpois_rvec","title":"The Poisson Distribution, Using Multiple Draws — dpois_rvec","text":"Density, distribution function, quantile function random generation Poisson distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dpois_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Poisson Distribution, Using Multiple Draws — dpois_rvec","text":"","code":"dpois_rvec(x, lambda, log = FALSE)  ppois_rvec(q, lambda, lower.tail = TRUE, log.p = FALSE)  qpois_rvec(p, lambda, lower.tail = TRUE, log.p = FALSE)  rpois_rvec(n, lambda, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dpois_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Poisson Distribution, Using Multiple Draws — dpois_rvec","text":"x Quantiles. Can rvec. lambda Vector means. See stats::rpois(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dpois_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Poisson Distribution, Using Multiple Draws — dpois_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dpois_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Poisson Distribution, Using Multiple Draws — dpois_rvec","text":"Functions dpois_rvec(), ppois_rvec(), ppois_rvec() rpois_rvec() work like base R functions dpois(), ppois(), qpois(), rpois(), except accept rvecs inputs. input rvec, output . Function rpois_rvec() also returns rvec value n_draw supplied. dpois_rvec(), ppois_rvec(), ppois_rvec() rpois_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dpois_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Poisson Distribution, Using Multiple Draws — dpois_rvec","text":"","code":"x <- rvec(list(c(3, 5),                c(1, 2))) dpois_rvec(x, lambda = 3) #> <rvec_dbl<2>[2]> #> [1] 0.224,0.1008 0.1494,0.224 ppois_rvec(x, lambda = 3) #> <rvec_dbl<2>[2]> #> [1] 0.6472,0.9161 0.1991,0.4232  rpois_rvec(n = 2,            lambda = c(5, 10),            n_draw = 1000) #> <rvec_int<1000>[2]> #> [1] 5 (1, 10)  10 (4, 16)"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Logical Operations Across Random Draws — draws_all","title":"Logical Operations Across Random Draws — draws_all","text":"Apply logical summaries across random draws.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logical Operations Across Random Draws — draws_all","text":"","code":"draws_all(x, na_rm = FALSE)  # S3 method for rvec_chr draws_all(x, na_rm = FALSE)  # S3 method for rvec draws_all(x, na_rm = FALSE)  draws_any(x, na_rm = FALSE)  # S3 method for rvec_chr draws_any(x, na_rm = FALSE)  # S3 method for rvec draws_any(x, na_rm = FALSE)"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logical Operations Across Random Draws — draws_all","text":"x object class rvec. na_rm Whether remove NAs calculating summaries. Default FALSE.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logical Operations Across Random Draws — draws_all","text":"vector.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logical Operations Across Random Draws — draws_all","text":"","code":"m <- rbind(a = c(TRUE,  FALSE,  TRUE),            b = c(TRUE,  TRUE,   TRUE),            c = c(FALSE, FALSE,  FALSE)) x <- rvec(m) x #> <rvec_lgl<3>[3]> #>     a     b     c  #> T,F,T T,T,T F,F,F  draws_all(x) #>     a     b     c  #> FALSE  TRUE FALSE  draws_any(x) #>     a     b     c  #>  TRUE  TRUE FALSE"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Credible Intervals from Random Draws — draws_ci","title":"Credible Intervals from Random Draws — draws_ci","text":"Summarise distribution random draws rvec, using simple credible interval.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Credible Intervals from Random Draws — draws_ci","text":"","code":"draws_ci(x, width = 0.95, prefix = NULL, na_rm = FALSE)  # S3 method for rvec draws_ci(x, width = 0.95, prefix = NULL, na_rm = FALSE)  # S3 method for rvec_chr draws_ci(x, width = 0.95, prefix = NULL, na_rm = FALSE)"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Credible Intervals from Random Draws — draws_ci","text":"x object class rvec. width number, 0 < width <= 1. Default 0.975. prefix String added names columns result. Defaults name x. na_rm Whether remove NAs calculating summaries. Default FALSE.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Credible Intervals from Random Draws — draws_ci","text":"tibble three columns.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_ci.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Credible Intervals from Random Draws — draws_ci","text":"tempting assign results call draws_ci() column data frame, my_df$ci <- draws_ci(my_rvec) However, creating columns way can corrupt data frames. safer options, see examples .","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Credible Intervals from Random Draws — draws_ci","text":"","code":"set.seed(0) m <- rbind(a = rnorm(100, mean = 5, sd = 2),            b = rnorm(100, mean = -3, sd = 3),            c = rnorm(100, mean = 0, sd = 20)) x <- rvec(m) x #> <rvec_dbl<100>[3]> #>                a                b                c  #>     4.9 (2, 8.2) -3.6 (-7.1, 2.9)    1.1 (-35, 36)  draws_ci(x) #> # A tibble: 3 × 3 #>   x.lower x.mid x.upper #>     <dbl> <dbl>   <dbl> #> 1    2.02  4.93    8.23 #> 2   -7.06 -3.61    2.87 #> 3  -35.3   1.06   36.1   ## results from 'draws_ci' ## assigned to a data frame library(dplyr) df <- data.frame(x)  ## base R approach cbind(df, draws_ci(x)) #>                  x    x.lower     x.mid   x.upper #> 1     4.9 (2, 8.2)   2.017346  4.934077  8.228987 #> 2 -3.6 (-7.1, 2.9)  -7.058286 -3.611295  2.872534 #> 3    1.1 (-35, 36) -35.275211  1.061243 36.052985  ## a tidyverse alternative: ## mutate with no '=' df |> mutate(draws_ci(x)) #>                  x    x.lower     x.mid   x.upper #> 1     4.9 (2, 8.2)   2.017346  4.934077  8.228987 #> 2 -3.6 (-7.1, 2.9)  -7.058286 -3.611295  2.872534 #> 3    1.1 (-35, 36) -35.275211  1.061243 36.052985"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Summary Function Across Random Draws — draws_fun","title":"Apply Summary Function Across Random Draws — draws_fun","text":"Summarise distribution random draws rvec, using function.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Summary Function Across Random Draws — draws_fun","text":"","code":"draws_fun(x, fun, ...)  # S3 method for rvec draws_fun(x, fun, ...)"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Summary Function Across Random Draws — draws_fun","text":"x object class rvec. fun function. ... Additional arguments passed fun.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Summary Function Across Random Draws — draws_fun","text":"results calls fun, combined using vctrs::vec_c().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_fun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Summary Function Across Random Draws — draws_fun","text":"","code":"set.seed(0) m <- rbind(a = rnorm(100, mean = 5, sd = 2),            b = rnorm(100, mean = -3, sd = 3),            c = rnorm(100, mean = 0, sd = 20)) x <- rvec(m) x #> <rvec_dbl<100>[3]> #>                a                b                c  #>     4.9 (2, 8.2) -3.6 (-7.1, 2.9)    1.1 (-35, 36)  draws_fun(x, fun = mad) #>         a         b         c  #>  1.846920  3.249964 19.154147  draws_fun(x, fun = range) #> $a #> [1] 0.5521995 9.8827293 #>  #> $b #> [1] -8.040548  4.975974 #>  #> $c #> [1] -58.09798  50.14222 #>  draws_fun(x, weighted.mean, wt = runif(100)) #>         a         b         c  #>  5.045337 -3.136655  1.344426  draws_fun(x, function(x) sd(x) / mean(x)) #>          a          b          c  #>  0.3498875 -0.9234251 15.6516656"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Medians, Means, and Modes Across Random Draws — draws_median","title":"Medians, Means, and Modes Across Random Draws — draws_median","text":"Summarise distribution random draws rvec, using means, medians, modes.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Medians, Means, and Modes Across Random Draws — draws_median","text":"","code":"draws_median(x, na_rm = FALSE)  # S3 method for rvec_chr draws_median(x, na_rm = FALSE)  # S3 method for rvec draws_median(x, na_rm = FALSE)  draws_mean(x, na_rm = FALSE)  # S3 method for rvec draws_mean(x, na_rm = FALSE)  # S3 method for rvec_chr draws_mean(x, na_rm = FALSE)  draws_mode(x, na_rm = FALSE)  # S3 method for rvec draws_mode(x, na_rm = FALSE)"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Medians, Means, and Modes Across Random Draws — draws_median","text":"x object class rvec. na_rm Whether remove NAs calculating summaries. Default FALSE.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Medians, Means, and Modes Across Random Draws — draws_median","text":"vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_median.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Medians, Means, and Modes Across Random Draws — draws_median","text":"method \"mode\", reduce_rvec() returns common value observation. tie, returns NA.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_median.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Medians, Means, and Modes Across Random Draws — draws_median","text":"","code":"m <- rbind(a = c(1, 1, 1, 2, 3),            b = c(2, 4, 0, 2, 3),            c = c(0, 0, 1, 0, 100)) x <- rvec(m) x #> <rvec_dbl<5>[3]> #>            a            b            c  #>   1 (1, 2.9) 2 (0.2, 3.9)    0 (0, 90)  draws_median(x) #> a b c  #> 1 2 0  draws_mean(x) #>    a    b    c  #>  1.6  2.2 20.2  draws_mode(x) #> a b c  #> 1 2 0"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantiles Across Random Draws — draws_quantile","title":"Quantiles Across Random Draws — draws_quantile","text":"Summarise distribution random draws rvec, using quantiles.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantiles Across Random Draws — draws_quantile","text":"","code":"draws_quantile(x, probs = c(0.025, 0.25, 0.5, 0.75, 0.975), na_rm = FALSE)  # S3 method for rvec draws_quantile(x, probs = c(0.025, 0.25, 0.5, 0.75, 0.975), na_rm = FALSE)  # S3 method for rvec_chr draws_quantile(x, probs = c(0.025, 0.25, 0.5, 0.75, 0.975), na_rm = FALSE)"},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantiles Across Random Draws — draws_quantile","text":"x object class rvec. probs Vector probabilities. na_rm Whether remove NAs calculating summaries. Default FALSE.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantiles Across Random Draws — draws_quantile","text":"tibble.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_quantile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quantiles Across Random Draws — draws_quantile","text":"probs argument defaults c(0.025, 0.25, 0.5, 0.75, 0.975), values needed median, 50% credible intervals, 95% credible interval.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_quantile.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Quantiles Across Random Draws — draws_quantile","text":"tempting assign results call draws_quantile() column data frame, my_df$quantile <- draws_quantile(my_rvec) However, creating data frame columns way can corrupt data frames. safer options, see examples .","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/draws_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantiles Across Random Draws — draws_quantile","text":"","code":"set.seed(0) m <- rbind(a = rnorm(100, mean = 5, sd = 2),            b = rnorm(100, mean = -3, sd = 3),            c = rnorm(100, mean = 0, sd = 20)) x <- rvec(m) x #> <rvec_dbl<100>[3]> #>                a                b                c  #>     4.9 (2, 8.2) -3.6 (-7.1, 2.9)    1.1 (-35, 36)  draws_quantile(x) #> # A tibble: 3 × 5 #>    x_2.5   x_25  x_50  x_75 x_97.5 #>    <dbl>  <dbl> <dbl> <dbl>  <dbl> #> 1   2.02   3.86  4.93  6.25   8.23 #> 2  -7.06  -5.60 -3.61 -1.24   2.87 #> 3 -35.3  -12.3   1.06 13.0   36.1   ## results from 'draws_quantile' ## assigned to a data frame library(dplyr) df <- data.frame(x)  ## base R approach cbind(df, draws_quantile(x)) #>                  x      x_2.5       x_25      x_50      x_75    x_97.5 #> 1     4.9 (2, 8.2)   2.017346   3.861163  4.934077  6.250702  8.228987 #> 2 -3.6 (-7.1, 2.9)  -7.058286  -5.600306 -3.611295 -1.239950  2.872534 #> 3    1.1 (-35, 36) -35.275211 -12.331310  1.061243 13.036488 36.052985  ## a tidyverse alternative: ## mutate with no '=' df |>   mutate(draws_quantile(x)) #>                  x      x_2.5       x_25      x_50      x_75    x_97.5 #> 1     4.9 (2, 8.2)   2.017346   3.861163  4.934077  6.250702  8.228987 #> 2 -3.6 (-7.1, 2.9)  -7.058286  -5.600306 -3.611295 -1.239950  2.872534 #> 3    1.1 (-35, 36) -35.275211 -12.331310  1.061243 13.036488 36.052985"},{"path":"https://bayesiandemography.github.io/rvec/reference/dt_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Student t Distribution, Using Multiple Draws — dt_rvec","title":"Student t Distribution, Using Multiple Draws — dt_rvec","text":"Density, distribution function, quantile function random generation t distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dt_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Student t Distribution, Using Multiple Draws — dt_rvec","text":"","code":"dt_rvec(x, df, ncp = 0, log = FALSE)  pt_rvec(q, df, ncp = 0, lower.tail = TRUE, log.p = FALSE)  qt_rvec(p, df, ncp = 0, lower.tail = TRUE, log.p = FALSE)  rt_rvec(n, df, ncp = 0, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dt_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Student t Distribution, Using Multiple Draws — dt_rvec","text":"x Quantiles. Can rvec. df Degrees freedom. See stats::dt(). Can rvec. ncp Non-centrality parameter. Default 0. See stats::dt(). rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dt_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Student t Distribution, Using Multiple Draws — dt_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dt_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Student t Distribution, Using Multiple Draws — dt_rvec","text":"Functions dt_rvec(), pt_rvec(), pt_rvec() rt_rvec() work like base R functions dt(), pt(), qt(), rt(), except accept rvecs inputs. input rvec, output . Function rt_rvec() also returns rvec value n_draw supplied. dt_rvec(), pt_rvec(), pt_rvec() rt_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dt_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Student t Distribution, Using Multiple Draws — dt_rvec","text":"","code":"x <- rvec(list(c(-3.2, 5.3),                c(-1.6, 2))) dt_rvec(x, df = 4) #> <rvec_dbl<2>[2]> #> [1] 0.01568,0.002057 0.1089,0.06629   pt_rvec(x, df = 4) #> <rvec_dbl<2>[2]> #> [1] 0.01645,0.997  0.09242,0.9419  rt_rvec(n = 2,         df = c(3, 5),         n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] 0.03 (-3.3, 2.7)  0.073 (-2.7, 2.6)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dunif_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Distribution, Using Multiple Draws — dunif_rvec","title":"Uniform Distribution, Using Multiple Draws — dunif_rvec","text":"Density, distribution function, quantile function random generation uniform distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dunif_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Distribution, Using Multiple Draws — dunif_rvec","text":"","code":"dunif_rvec(x, min = 0, max = 1, log = FALSE)  punif_rvec(q, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)  qunif_rvec(p, min = 0, max = 1, lower.tail = TRUE, log.p = FALSE)  runif_rvec(n, min = 0, max = 1, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dunif_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Distribution, Using Multiple Draws — dunif_rvec","text":"x Quantiles. Can rvec. min Lower limits. Default 0. See stats::dunif(). Can rvec. max Upper limited. Default 1. See stats::dunif(). Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dunif_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform Distribution, Using Multiple Draws — dunif_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dunif_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uniform Distribution, Using Multiple Draws — dunif_rvec","text":"Functions dunif_rvec(), punif_rvec(), punif_rvec() runif_rvec() work like base R functions dt(), pt(), qt(), rt(), except accept rvecs inputs. input rvec, output . Function runif_rvec() also returns rvec value n_draw supplied. dunif_rvec(), punif_rvec(), punif_rvec() runif_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dunif_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uniform Distribution, Using Multiple Draws — dunif_rvec","text":"","code":"x <- rvec(list(c(0.2, 0.5),                c(0.6, 0.7))) dunif_rvec(x) #> <rvec_dbl<2>[2]> #> [1] 1,1 1,1 punif_rvec(x) #> <rvec_dbl<2>[2]> #> [1] 0.2,0.5 0.6,0.7  runif_rvec(n = 2,            min = c(0, 0.5),            n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] 0.49 (0.021, 0.98) 0.76 (0.52, 0.99)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dweibull_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull Distribution, Using Multiple Draws — dweibull_rvec","title":"Weibull Distribution, Using Multiple Draws — dweibull_rvec","text":"Density, distribution function, quantile function random generation Weibull distribution, modified work rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dweibull_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull Distribution, Using Multiple Draws — dweibull_rvec","text":"","code":"dweibull_rvec(x, shape, scale = 1, log = FALSE)  pweibull_rvec(q, shape, scale = 1, lower.tail = TRUE, log.p = FALSE)  qweibull_rvec(p, shape, scale = 1, lower.tail = TRUE, log.p = FALSE)  rweibull_rvec(n, shape, scale = 1, n_draw = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/dweibull_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull Distribution, Using Multiple Draws — dweibull_rvec","text":"x Quantiles. Can rvec. shape Shape parameter. See stats::dweibull(). Can rvec. scale Scale parameter. See stats::dweibull() Default 1. Can rvec. log, log.p Whether return results log scale. Default FALSE. rvec. q Quantiles. Can rvec. lower.tail Whether return \\(P[X \\le x]\\), opposed \\(P[X > x]\\). Default TRUE. rvec. p Probabilities. Can rvec. n length random vector created. rvec. n_draw Number random draws random vector created. rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dweibull_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull Distribution, Using Multiple Draws — dweibull_rvec","text":"arguments rvecs, value n_draw supplied, rvec Otherwise ordinary R vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/dweibull_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weibull Distribution, Using Multiple Draws — dweibull_rvec","text":"Functions dweibull_rvec(), pweibull_rvec(), pweibull_rvec() rweibull_rvec() work like base R functions dt(), pt(), qt(), rt(), except accept rvecs inputs. input rvec, output . Function rweibull_rvec() also returns rvec value n_draw supplied. dweibull_rvec(), pweibull_rvec(), pweibull_rvec() rweibull_rvec() use tidyverse vector recycling rules: Vectors length 1 recycled vectors must size","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/dweibull_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weibull Distribution, Using Multiple Draws — dweibull_rvec","text":"","code":"x <- rvec(list(c(3.2, 4.5),                c(7.6, 0.7))) dweibull_rvec(x, shape = 2) #> <rvec_dbl<2>[2]> #> [1] 0.0002286,0.00000001445             0.00000000000000000000000125,0.8577 pweibull_rvec(x, shape = 2) #> <rvec_dbl<2>[2]> #> [1] 1,1      1,0.3874  rweibull_rvec(n = 2,               shape = c(2, 3),               n_draw = 1000) #> <rvec_dbl<1000>[2]> #> [1] 0.82 (0.18, 2)   0.88 (0.28, 1.5)"},{"path":"https://bayesiandemography.github.io/rvec/reference/if_else_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorised If-Else, When Condition is an Rvec — if_else_rvec","title":"Vectorised If-Else, When Condition is an Rvec — if_else_rvec","text":"version if_else situation condition rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/if_else_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorised If-Else, When Condition is an Rvec — if_else_rvec","text":"","code":"if_else_rvec(condition, true, false, missing = NULL, size = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/if_else_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorised If-Else, When Condition is an Rvec — if_else_rvec","text":"condition object class rvec_lgl. true, false Vectors (including rvecs) use TRUE FALSE values condition. missing Vectors use NA values condition. Optional. size Length output. Optional.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/if_else_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectorised If-Else, When Condition is an Rvec — if_else_rvec","text":"rvec number draws condition.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/if_else_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vectorised If-Else, When Condition is an Rvec — if_else_rvec","text":"","code":"x <- rvec(list(c(1, 11),                c(2, 5),                c(22, 6)))  x > 10 ## rvec_lgl #> <rvec_lgl<2>[3]> #> [1] F,T F,F T,F  ## if_else_rvec needed when ## 'condition' is an rvec if_else_rvec(x > 10, 10, x) #> <rvec_dbl<2>[3]> #> [1] 1,10 2,5  10,6  ## dplyr::if_else works when ## 'true', 'false', or 'missing' ## (but not 'condition') are rvecs library(dplyr) if_else(c(TRUE, FALSE, TRUE), x, 100) #> <rvec_dbl<2>[3]> #> [1] 1,11    100,100 22,6"},{"path":"https://bayesiandemography.github.io/rvec/reference/is_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Is an Object an Rvec — is_rvec","title":"Is an Object an Rvec — is_rvec","text":"Test whether x inherits class \"rvec\".","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/is_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is an Object an Rvec — is_rvec","text":"","code":"is_rvec(x)"},{"path":"https://bayesiandemography.github.io/rvec/reference/is_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is an Object an Rvec — is_rvec","text":"x object.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/is_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is an Object an Rvec — is_rvec","text":"TRUE FALSE.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/is_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is an Object an Rvec — is_rvec","text":"","code":"x <- rvec_dbl() is_rvec(x) #> [1] TRUE"},{"path":"https://bayesiandemography.github.io/rvec/reference/map_rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a Function and Put Results in an Rvec — map_rvec","title":"Apply a Function and Put Results in an Rvec — map_rvec","text":"Apply function .f element .x, combine results rvec length .x.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/map_rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a Function and Put Results in an Rvec — map_rvec","text":"","code":"map_rvec(.x, .f, ...)"},{"path":"https://bayesiandemography.github.io/rvec/reference/map_rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a Function and Put Results in an Rvec — map_rvec","text":".x vector. .f function. ... Additional arguments passed .f.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/map_rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a Function and Put Results in an Rvec — map_rvec","text":"rvec length .x.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/map_rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a Function and Put Results in an Rvec — map_rvec","text":"call function .f produce rvec length 1.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/map_rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a Function and Put Results in an Rvec — map_rvec","text":"","code":"l <- list(a = rvec(matrix(1:2, 1)),           b = rvec(matrix(1:4, 2)),           c = rvec(matrix(1:6, 3))) l #> $a #> <rvec_int<2>[1]> #> [1] 1,2 #>  #> $b #> <rvec_int<2>[2]> #> [1] 1,3 2,4 #>  #> $c #> <rvec_int<2>[3]> #> [1] 1,4 2,5 3,6 #>  map_rvec(l, sum) #> <rvec_int<2>[3]> #>    a    b    c  #>  1,2  3,7 6,15   ## sapply does not work with rvecs sapply(l, sum) #> $a.data #>      [,1] [,2] #> [1,]    1    2 #>  #> $b.data #>      [,1] [,2] #> [1,]    3    7 #>  #> $c.data #>      [,1] [,2] #> [1,]    6   15 #>"},{"path":"https://bayesiandemography.github.io/rvec/reference/matrixOps.rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix Multiplication with Rvecs — matrixOps.rvec","title":"Matrix Multiplication with Rvecs — matrixOps.rvec","text":"Matrix multiplication %*% can used rvecs. However, constrast standard R vectors, multiplying rvec matrix produce row column vector. Instead produces ordinary rvec, dimensions.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/matrixOps.rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix Multiplication with Rvecs — matrixOps.rvec","text":"","code":"# S3 method for rvec matrixOps(x, y)"},{"path":"https://bayesiandemography.github.io/rvec/reference/matrixOps.rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix Multiplication with Rvecs — matrixOps.rvec","text":"x, y Vectors, matrices, rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/matrixOps.rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix Multiplication with Rvecs — matrixOps.rvec","text":"rvec, x y rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/matrixOps.rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix Multiplication with Rvecs — matrixOps.rvec","text":"","code":"A <- matrix(c(10, 10, 10,               11, 11, 11),             nrow = 2, byrow = TRUE) x <- rvec(list(c(1, 2),                c(3, 4),                c(5, 6))) A %*% x #> <rvec_dbl<2>[2]> #> [1] 90,120 99,132  ## matrix multiplication with an ## ordinary R matrix produces ## a row or column vector y <- c(1, 3, 5) A %*% y #>      [,1] #> [1,]   90 #> [2,]   99"},{"path":"https://bayesiandemography.github.io/rvec/reference/missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing, Finite, and Infinite Values\nin Rvecs — missing","title":"Missing, Finite, and Infinite Values\nin Rvecs — missing","text":"Detect remove missing infinite values rvecs. Operations done independently draw, though na.omit(), na.exclude(), na.fail() also look across draws.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing, Finite, and Infinite Values\nin Rvecs — missing","text":"","code":"# S3 method for rvec anyNA(x, recursive = FALSE)  # S3 method for rvec is.na(x)  # S3 method for rvec na.exclude(object, ...)  # S3 method for rvec na.omit(object, ...)"},{"path":"https://bayesiandemography.github.io/rvec/reference/missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing, Finite, and Infinite Values\nin Rvecs — missing","text":"x, object rvec. recursive Whether anyNA() applied recursively lists. Ignored x rvec. ... Currently ignored.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Missing, Finite, and Infinite Values\nin Rvecs — missing","text":"anyNA() - logical rvec length 1. .na(), .nan(), .finite(), .infinite() - logical rvec length original rvec. na.omit(), na.exclude() - rvec class original rvec, minus elements NAs draws. na.fail() - original rvec, error.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Missing, Finite, and Infinite Values\nin Rvecs — missing","text":"behavior rvec methods .na(), .nan(), .finite(), .infinite() differs standard vctrs behavior, return logical vector length equal length(x). rvecs, standard vctrs behavior entail summarising across draws, job draws_* functions.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Missing, Finite, and Infinite Values\nin Rvecs — missing","text":"","code":"x <- rvec(list(c(1.2, NA),                c(Inf, 3),                c(-1, NaN)))  ## return a logical rvec is.na(x) #> <rvec_lgl<2>[3]> #> [1] F,T F,F F,T is.nan(x) #> <rvec_lgl<2>[3]> #> [1] F,F F,F F,T is.finite(x) #> <rvec_lgl<2>[3]> #> [1] T,F F,T T,F is.infinite(x) #> <rvec_lgl<2>[3]> #> [1] F,F T,F F,F  ## return a logical rvec with length 1 anyNA(x) #> <rvec_lgl<2>[1]> #> [1] F,T  ## summarise across draws draws_any(anyNA(x)) #> [1] TRUE  ## return an NA-free version of 'x' na.omit(x) #> <rvec_dbl<2>[1]> #> [1] Inf,3 na.exclude(x) #> <rvec_dbl<2>[1]> #> [1] Inf,3  ## use 'if_else_rvec' to modify values ## within rvec if_else_rvec(is.na(x), 999, x) #> <rvec_dbl<2>[3]> #> [1] 1.2,999 Inf,3   -1,999   ## vctrs functions library(vctrs, warn.conflicts = FALSE) ## all draws missing vec_detect_missing(x) #> [1] FALSE FALSE FALSE ## any draws missing vec_detect_complete(x) #> [1] FALSE  TRUE FALSE"},{"path":"https://bayesiandemography.github.io/rvec/reference/n_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Query Number of Draws — n_draw","title":"Query Number of Draws — n_draw","text":"Get count random draws held x. x hold random draws, n_draw() throws error.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/n_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query Number of Draws — n_draw","text":"","code":"n_draw(x)  # S3 method for default n_draw(x)  # S3 method for rvec n_draw(x)"},{"path":"https://bayesiandemography.github.io/rvec/reference/n_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query Number of Draws — n_draw","text":"x object holds random draws, eg rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/n_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query Number of Draws — n_draw","text":"integer scalar.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/n_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query Number of Draws — n_draw","text":"","code":"m <- matrix(1:40, nrow = 4, ncol = 10) x <- rvec(m) n_draw(x) #> [1] 10"},{"path":"https://bayesiandemography.github.io/rvec/reference/rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Ranks, Including Rvecs — rank","title":"Sample Ranks, Including Rvecs — rank","text":"Calculate sample ranks ordinary vectors rvecs. case rvecs, ranks calculated independently draw.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Ranks, Including Rvecs — rank","text":"","code":"rank(   x,   na.last = TRUE,   ties.method = c(\"average\", \"first\", \"last\", \"random\", \"max\", \"min\") )"},{"path":"https://bayesiandemography.github.io/rvec/reference/rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Ranks, Including Rvecs — rank","text":"x ordinary vector rvec(). na.last Treatment NAs. Options TRUE, FALSE, \"keep\". See base::rank() details. ties.method Treatment ties. See base::rank() details.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Ranks, Including Rvecs — rank","text":"object class rvec_int() x rvec. Otherwise ordinary integer vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rank.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Ranks, Including Rvecs — rank","text":"enable different behavior rvecs ordinary vectors, base R function base::rank() turned generic, base::rank() default. details calculations, see documentation base::rank().","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Ranks, Including Rvecs — rank","text":"","code":"x <- rvec(list(c(3, 30),                c(0, 100))) rank(x) #> <rvec_int<2>[2]> #> [1] 2,1 1,2"},{"path":"https://bayesiandemography.github.io/rvec/reference/reg_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior Sample from Linear Regression — reg_post","title":"Posterior Sample from Linear Regression — reg_post","text":"Posterior sample parameters linear regression model.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/reg_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior Sample from Linear Regression — reg_post","text":"","code":"reg_post"},{"path":"https://bayesiandemography.github.io/rvec/reference/reg_post.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Posterior Sample from Linear Regression — reg_post","text":"matrix 200 columns following rows: alpha: Intercept parameter beta: Slope parameter sigma: Standard deviation error term","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/reg_post.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Posterior Sample from Linear Regression — reg_post","text":"reg_post contains values second half line dataset package coda. line dataset draws BUGS manual: Spiegelhalter, D.J., Thomas, ., Best, N.G. Gilks, W.R. (1995) BUGS: Bayesian inference using Gibbs Sampling, Version 0.5, MRC Biostatistics Unit, Cambridge.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Package 'rvec' — rvec-package","title":"Package 'rvec' — rvec-package","text":"Tools working random draws distribution, eg draws posterior distribution Bayesian analysis.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package 'rvec' — rvec-package","text":"rvec holds multiple draws, wherever possible behaves like ordinary R vector. instance, x rvec holding 1000 draws distribution, 2 * x returns new rvec draw multiplied 2. summarise across draws, use function starting draws. instance, calculate credible interval, use draws_ci().","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec-package.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Package 'rvec' — rvec-package","text":"Creating rvecs rvec() - class depends input rvec_dbl() - doubles rvec_int() - integers rvec_lgl() - logical rvec_chr() - character collapse_to_rvec() - data data frame Manipulating rvecs if_else_rvec() map_rvec() Probability distributions dbeta_rvec() dbinom_rvec() dcauchy_rvec() dchisq_rvec() dexp_rvec() df_rvec() dgamma_rvec() dgeom_rvec() dhyper_rvec() dlnorm_rvec() dmultinom() dnbinom_rvec() dnorm_rvec() dpois_rvec() dt_rvec() dunif_rvec() dweibull_rvec() Summarizing across draws draws_all() draws_any() draws_median() draws_mean() draws_mode() draws_ci() draws_quantile() draws_fun() n_draw() Coercion, classes as_list_col() expand_from_rvec() is_rvec() Weighted summaries weighted_mad() weighted_mean() weighted_median() weighted_sd() weighted_var() Datasets divorce() reg_post()","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec-package.html","id":"packages-with-similar-functionality","dir":"Reference","previous_headings":"","what":"Packages with similar functionality","title":"Package 'rvec' — rvec-package","text":"rv posterior","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Package 'rvec' — rvec-package","text":"Maintainer: John Bryant john@bayesiandemography.com contributors: Bayesian Demography Limited [copyright holder]","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Rvec — rvec","title":"Create an Rvec — rvec","text":"Create Object Class \"rvec\".","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Rvec — rvec","text":"","code":"rvec(x)  rvec_chr(x = NULL)  rvec_dbl(x = NULL)  rvec_int(x = NULL)  rvec_lgl(x = NULL)"},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Rvec — rvec","text":"x matrix, list vectors, atomic vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Rvec — rvec","text":"rvec following class: rvec_dbl(): \"rvec_dbl\" rvec_int(): \"rvec_int\" rvec_lgl(): \"rvec_lgl\" rvec_chr(): \"rvec_chr\" rvec(): \"rvec_chr\", \"rvec_dbl\" \"rvec_int\", \"rvec_lgl\", depending typeof(x).","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an Rvec — rvec","text":"Class \"rvec\" four subclasses, dealing diffent type: \"rvec_dbl\" doubles \"rvec_int\" integers \"rvec_lgl\" logical \"rvec_chr\" character subclasses analogous double(), integer(), logical(), character() vectors. Function rvec() chooses subclass, based x. Functions rvec_dbl(), rvec_int(), rvec_lgl(), rvec_chr() create objects particular subclass. x can matrix, row set draws unknown quantity. list, element set draws. atomic vector, treated single-column matrix.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/rvec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Rvec — rvec","text":"","code":"m <- rbind(c(-1.5, 2, 0.2),            c(-2.3, 3, 1.2)) rvec_dbl(m) #> <rvec_dbl<3>[2]> #> [1] -1.5,2,0.2 -2.3,3,1.2  l <- list(rpois(100, lambda = 10.2),           rpois(100, lambda = 5.5)) rvec(l) #> <rvec_int<100>[2]> #> [1] 10 (5.5, 17) 5 (1.5, 10)   rvec(letters[1:5]) #> <rvec_chr<1>[5]> #> [1] \"a\" \"b\" \"c\" \"d\" \"e\"  l <- list(a = c(TRUE, FALSE),           b = c(FALSE, TRUE)) rvec(l) #> <rvec_lgl<2>[2]> #>   a   b  #> T,F F,T"},{"path":"https://bayesiandemography.github.io/rvec/reference/sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Deviation, Including Rvecs — sd","title":"Standard Deviation, Including Rvecs — sd","text":"Calculate standard deviation x, x can rvec. x rvec, separate standard deviations calculated draw.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Deviation, Including Rvecs — sd","text":"","code":"sd(x, na.rm = FALSE)"},{"path":"https://bayesiandemography.github.io/rvec/reference/sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Deviation, Including Rvecs — sd","text":"x numeric vector R object, including rvec(). na.rm Whether remove NAs calculating standard deviations.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/sd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Deviation, Including Rvecs — sd","text":"rvec, x rvec. Otherwise typically numeric vector.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/sd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standard Deviation, Including Rvecs — sd","text":"enable different behavior rvecs ordinary vectors, base R function stats::sd() turned generic, stats::sd() default. details calculations, see documentation stats::sd().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/sd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Deviation, Including Rvecs — sd","text":"","code":"x <- rvec(cbind(rnorm(10), rnorm(10, sd = 20))) x #> <rvec_dbl<2>[10]> #>  [1] -0.4728,-14.86 -0.2671,-2.448 -0.091,12.28   0.5138,0.8471  -0.2193,-5.89  #>  [6] -0.2305,-2.47  -0.1631,-28.06 -1.818,-44.19  0.8552,-0.4271 -0.7809,-12.68 sd(x) #> <rvec_dbl<2>[1]> #> [1] 0.717,16.2"},{"path":"https://bayesiandemography.github.io/rvec/reference/var.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation, Variance and Covariance (Matrices), Including Rvecs — var","title":"Correlation, Variance and Covariance (Matrices), Including Rvecs — var","text":"Calculate correlations variances, including x y rvec.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation, Variance and Covariance (Matrices), Including Rvecs — var","text":"","code":"var(x, y = NULL, na.rm = FALSE, use)"},{"path":"https://bayesiandemography.github.io/rvec/reference/var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation, Variance and Covariance (Matrices), Including Rvecs — var","text":"x numeric vector, matrix, data frame, rvec(). y NULL (default) vector, matrix, data frame, rvec compatible dimensions x. na.rm Whether NAs removed calculations. use Calculation method. See stats::var().","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation, Variance and Covariance (Matrices), Including Rvecs — var","text":"rvec, x y rvec. Otherwise typically numeric vector matrix.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Correlation, Variance and Covariance (Matrices), Including Rvecs — var","text":"enable different behavior rvecs ordinary vectors, base R function stats::var() turned generic, stats::var() default. details calculations, see documentation stats::var().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation, Variance and Covariance (Matrices), Including Rvecs — var","text":"","code":"x <- rvec(cbind(rnorm(10), rnorm(10, sd = 20))) x #> <rvec_dbl<2>[10]> #>  [1] 0.9552,-3.921  -0.8611,-4.893 2.594,5.434    1.077,-11.9    1.131,-20.67   #>  [6] 0.4344,-7.849  1.319,16.01    -0.2737,-3.119 -0.4535,-11.8  -0.3113,1.574  var(x) #> <rvec_dbl<2>[1]> #> [1] 1.109,104.2"},{"path":"https://bayesiandemography.github.io/rvec/reference/weighted_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Weighted Summaries — weighted_mean","title":"Calculate Weighted Summaries — weighted_mean","text":"Calculate weighted means medians MADs (mean absolute deviations) variances standard deviations. functions work ordinary vectors rvecs.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/weighted_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Weighted Summaries — weighted_mean","text":"","code":"weighted_mean(x, wt = NULL, na_rm = FALSE)  # S3 method for default weighted_mean(x, wt = NULL, na_rm = FALSE)  # S3 method for rvec weighted_mean(x, wt = NULL, na_rm = FALSE)  weighted_mad(x, wt = NULL, na_rm = FALSE)  # S3 method for default weighted_mad(x, wt = NULL, na_rm = FALSE)  # S3 method for rvec weighted_mad(x, wt = NULL, na_rm = FALSE)  weighted_median(x, wt = NULL, na_rm = FALSE)  # S3 method for default weighted_median(x, wt = NULL, na_rm = FALSE)  # S3 method for rvec weighted_median(x, wt = NULL, na_rm = FALSE)  weighted_sd(x, wt = NULL, na_rm = FALSE)  # S3 method for default weighted_sd(x, wt = NULL, na_rm = FALSE)  # S3 method for rvec weighted_sd(x, wt = NULL, na_rm = FALSE)  weighted_var(x, wt = NULL, na_rm = FALSE)  # S3 method for default weighted_var(x, wt = NULL, na_rm = FALSE)  # S3 method for rvec weighted_var(x, wt = NULL, na_rm = FALSE)"},{"path":"https://bayesiandemography.github.io/rvec/reference/weighted_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Weighted Summaries — weighted_mean","text":"x Quantity summarised. ordinary vector rvec. wt Weights. ordinary vector, rvec, NULL (default.) NULL, unweighted summary returned. na_rm Whether remove NAs x wt calculating. Default FALSE. See matrixStats::weightedMean() description algorithm used.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/weighted_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Weighted Summaries — weighted_mean","text":"x wt rvec, rvec length 1. Otherwise, scalar.","code":""},{"path":"https://bayesiandemography.github.io/rvec/reference/weighted_mean.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Weighted Summaries — weighted_mean","text":"x wt must length. Internally calculations done matrixStats functions matrixStats::weightedMean() matrixStats::colWeightedMeans().","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/reference/weighted_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Weighted Summaries — weighted_mean","text":"","code":"## 'x' is rvec, 'wt' is ordinary vector v <- rvec(list(c(1, 11),                c(2, 12),                c(7, 17))) weights <- c(40, 80, 72) weighted_mean(v, wt = weights) #> <rvec_dbl<2>[1]> #> [1] 3.667,13.67  ## 'x' is ordinary vector, 'wt' is rvec y <- c(1, 2, 3) w <- rvec(list(c(100, 200),                c(210, 889),                c(200, 200))) weighted_mean(y, wt = w) #> <rvec_dbl<2>[1]> #> [1] 2.196,2 weighted_mean(y, wt = w, na_rm = TRUE) #> <rvec_dbl<2>[1]> #> [1] 2.196,2"},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"documentation-0-0-6","dir":"Changelog","previous_headings":"","what":"Documentation","title":"rvec 0.0.6","text":"Fixed typo DESCRIPTION Added ‘value’ section documentation “missing” Added examples documentation “missing”","code":""},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"interface-0-0-6","dir":"Changelog","previous_headings":"","what":"Interface","title":"rvec 0.0.6","text":"Changed anyNA() returns rvec, rather logical scalar.","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"features-0-0-5","dir":"Changelog","previous_headings":"","what":"Features","title":"rvec 0.0.5","text":"added default case n_draw","code":""},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"documentation-0-0-5","dir":"Changelog","previous_headings":"","what":"Documentation","title":"rvec 0.0.5","text":"sundry tidying help files","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"documentation-0-0-4","dir":"Changelog","previous_headings":"","what":"Documentation","title":"rvec 0.0.4","text":"Export generices sd, var, rank, add documentation","code":""},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"internals-0-0-4","dir":"Changelog","previous_headings":"","what":"Internals","title":"rvec 0.0.4","text":"Change argument names matrixOps ‘x’ ‘y’","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"documentation-0-0-3","dir":"Changelog","previous_headings":"","what":"Documentation","title":"rvec 0.0.3","text":"Split help distributions multiple files Revise vignette","code":""},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"features-0-0-3","dir":"Changelog","previous_headings":"","what":"Features","title":"rvec 0.0.3","text":"added ‘’ argument collapse_to_rvec added summary method added ‘rank’, ‘order’, ‘sort’","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"bug-fix-0-0-2","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"rvec 0.0.2","text":"Added drop = FALSE argument calls matrixStats::rowQuantiles()","code":""},{"path":[]},{"path":"https://bayesiandemography.github.io/rvec/news/index.html","id":"minor-feature-added-0-0-1","dir":"Changelog","previous_headings":"","what":"Minor feature added","title":"rvec 0.0.1","text":"Added method .numeric(). (Can’t add methods .character(), .double(), .integer(), .logical(), since non-generic primitives.","code":""}]
