% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_rvecs.R
\name{to_rvecs}
\alias{to_rvecs}
\title{Convert random draws in a data frame to an 'rvec' format}
\usage{
to_rvecs(data, draw = draw, values = value, types = NULL)
}
\arguments{
\item{data}{A data frame, possibly
\link[dplyr:grouped_df]{grouped}.}

\item{draw}{<\code{\link[tidyselect:language]{tidyselect}}>
Column within \code{data} that identifies draws within
each combination of ID variables.}

\item{values}{<\code{\link[tidyselect:language]{tidyselect}}>
One or more columns in \code{data} that hold
values for random draws.}

\item{types}{Optional. A string, each letter
of which represents specifies an \code{rvec} constructor
function.}
}
\value{
A \link[tibble:tibble]{tibble}.
}
\description{
Given a data frame in which each row represents one
draw, create a new, smaller data frame that uses
\link[=rvec]{rvecs} to represent draws.
}
\section{Kinds of columns in \code{data}}{


\code{to_rvecs()} recognises three kinds of columns:
\itemize{
\item \emph{values} Measurements of some random process.
\item \emph{ID} Variables that jointly identify
sets of draws.
\item \emph{draw} Indices distinguishing draws
within a single set.
}

In the following dataset, for instance,
\code{pay} is a values column, \code{occupation}
is an ID column, and \code{sim} is a draw column.

\if{html}{\out{<div class="sourceCode">}}\preformatted{#> # A tibble: 6 x 3
#>   occupation     sim   pay
#>   <chr>        <dbl> <dbl>
#> 1 Statistician     1   100
#> 2 Statistician     2    80
#> 3 Statistician     3   105
#> 4 Banker           1   400
#> 5 Banker           2   350
#> 6 Banker           3   420
}\if{html}{\out{</div>}}
}

\section{Using \code{to_rvecs} with ordinary data frames}{


When \code{data} is an ordinary data frame,
\code{to_rvecs} assumes that all columns in \code{data}
that are not included in the \code{draw} and \code{values}
arguments are ID columns.

If \code{data} in fact contains columns that are
not draw, value, or ID columns, then these
extra columns should be removed before calling
\code{to_rvecs()}. See below for an example.
}

\section{Using \code{to_rvecs} with grouped data frames}{


When \code{data} is a \link[dplyr:grouped_df]{grouped} data frame,
\code{to_rvecs} only assumes that a column is a ID column if
it is not included in the \code{draw} and \code{values} argument,
and if is a grouping variable for \code{data}.
(To check whether a column in \code{data} is a grouping variable,
print \code{data} and look at the metadata near the top,
or call \code{\link[dplyr:group_data]{dplyr::group_vars()}}.)

\code{rvecs} silently removes from \code{data} any columns that
are not included in the \code{draw} and \code{values} arguments,
and that are not grouping variables.
}

\section{Types}{


By default, \code{to_rvecs()} calls function
\code{\link[=rvec]{rvec()}} on each values column in \code{data}.
\code{\link[=rvec]{rvec()}} chooses the class for each
\code{rvec} object it creates based on
the contents of each values column.

To enforce particular choices of classes,
supply a value for the \code{types} argument.
\code{type} must be a string, with the number of
characters equal to the length of \code{values}.
Each character in \code{type} specifies
particular constructor function:
\itemize{
\item c = \code{\link[=rvec_chr]{rvec_chr()}}
\item d = \code{\link[=rvec_dbl]{rvec_dbl()}}
\item i = \code{\link[=rvec_int]{rvec_int()}}
\item l = \code{\link[=rvec_lgl]{rvec_lgl()}}
\item ? = \code{\link[=rvec]{rvec()}}
}

(These codes are based on codes used in the
\code{readr} package.)
}

\examples{
to_rvecs(data = divorces,
         draw = sim,
         values = rate)

## specify type
to_rvecs(data = divorces,
         draw = sim,
         values = rate,
         type = "d")

## dataset with a redundant column
library(dplyr)
divorces2 <- divorces \%>\%
  mutate(extra = seq_len(n()))

## earlier call no longer works
try(
  to_rvecs(data = divorces2,
           draw = sim,
           values = rate)
)

## one solution: use 'group_by' to
## specify the ID columns
divorces2 <- divorces2 \%>\%
  group_by(age, sex, time)
to_rvecs(data = divorces2,
         draw = sim,
         values = rate)
}
\seealso{
\itemize{
\item \code{\link[=rvec]{rvec()}} to construct a single \code{rvec}.
}
}
